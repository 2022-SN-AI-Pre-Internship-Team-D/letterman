version: "3"

volumes:
  static_volume: null
  media_volume: null
  build_folder: null
  mysql_data: {}
  prometheus_data: {}
  grafana_data: {}  

services:
  backend:
    build: ./letterman-back/backend
    container_name: backend
    command: >
      bash -c "python3 manage.py makemigrations letters &&
               python3 manage.py makemigrations users &&
               python3 manage.py migrate &&
               gunicorn backend.wsgi --bind 0.0.0.0:8080 --timeout 240"
    ports:
      - "8080:8080"
    volumes:
      - ./letterman-back/backend:/app
      - static_volume:/backend/staticfiles
      - media_volume:/backend/mediafiles
    networks:
      - letterman

  frontend:
    build:
      context: ./letterman-front
      args:
        API_URL: "*"
    container_name: frontend
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080
    volumes:
      - ./letterman-front:/frontend
      - build_folder:/frontend/build
      - ./letterman-front/node_modules/:/frontend/node_modules 
    restart: always
    tty: true
    networks:
      - letterman

  nginx:
    build:
      context: ./nginx 
      dockerfile: Dockerfile
    container_name: nginx
    volumes:
      - static_volume:/backend/staticfiles
      - media_volume:/backend/mediafiles
      - build_folder:/var/www/frontend
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - letterman


  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=90d # 90일보다 오래된 metrics는 삭제
      - --storage.tsdb.retention.size=10GB # 10GB를 넘을 시 오래된 metrics 삭제
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/proemtheus/consoles
      - --web.enable-admin-api
    networks:
      - letterman

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - 3030:3030 
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    depends_on:
      - prometheus
    networks:
      - letterman

networks:
  letterman:
    driver: bridge